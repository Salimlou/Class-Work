Since my job (along with developer) in this whole mess is INTEGRATOR, I feel that it is my duty to make sure that all of our code works together.  I would have to say that thus far I've failed to do this properly.

To name a single example of my failure to do this, was the recent modification of the Page_Basic class to include two functions along the lines of startContent() and endContent().  They should have never been added to the Page_Basic class.  Rather, the getHeader() and getFooter() should have been extended to include the startContent() and endContent() functionality.  However, one of the pieces of functionality, specifially a page menu, does not belong in getHeader(), since it isn't needed at the beginning of every page.  So, in this instance, I added a new function to the Page_Basic class called getMenu() with outputs a menu.  This way we can output the menu at our chosing instead of auto-magically everytime getHeader() is called.

As integrator, there is also the question of directory management and source control.  Currently ALL DEVELOPMENT SHOULD TAKE PLACE IN A FOLDER CALLED survey IN YOUR OWN DIRECTORY.  The reason for this is two-fold.  First and foremost is a limitation of the Page::getPath() function neededing to know when to stop building it's prefix string.  Secondly, it isolates all the development in a single place away from whatever else you want to do in your home directory on voyager-new.

A note on Page::getPath(): It returns the current working path to a directory called survey.  This is an increadiably useful thing because it allows for us to build all sorts of URLs without having to futz around with our position in the directory tree.